#==============================================
# SIS
#==============================================

#set path

###################
# STAN Generation: 
# given parameters lambda, beta, gamma, mu and initial state S(0),I(0), 
# compute S(t) and I(t) up to time T from the system
#
# dS/dt = gamma*N - beta*S*I/N + gamma*I - mu*S
# dI/dt = beta*S*I/N - gamma*I - mu*I
#
# and add some noise
###################

cols <- c('blue','red','green')

require(rstan)
rstan_options (auto_write = TRUE)
options (mc.cores = parallel::detectCores ())

#ODE parameters
lambda <- 0.0001; beta <- 0.5; gamma <-0.01; mu <- 14/(1000*12);
N <- 1000

#times
n_years <- 6;  n_t <- n_years*12; t	<- seq(0, n_t, by = 1); t0 = t[1]; t <- t[-1]; T <- length(t);

#initial conditions
i0 <- 1; s0 <-  N-i0; y0 = c( S=s0, I=i0);

data <-  list (T  = T, y0 = y0, t0 = t0, ts = t,lambda =lambda, beta = beta, gamma =gamma, mu =mu, N=N)




fit <- stan(file = '1sisGenerate.stan', 
            data = data, 
            algorithm="Fixed_param",
            chains = 1,
            iter =1)

s <- rstan::extract(fit)
str(s$y)
y <- data.frame(s$y[1,1:T,1:2])
names(y) <- c('S','I')
head(y)

plot(1, xlim=c(min(t), max(t)), ylim=c(min(y),max(y)), type='n', main='STAN Generated noisy SIS' )
lines(t, y[,1], col=cols[1])
lines(t, y[,2], col=cols[2])
legend("topright", c("S", "I"), col = cols[1:2], lty = 1:2)

y2_data= y[,2]

#############################################
# STAN Inference: given y2 (infected), initial data, and parameters
#lambda, gamma, mu, recover beta and y.
#############################################
rm(list=setdiff(ls(), c("y2_data", 'cols')))

#ODE parameters
lambda <- 0.0001; gamma <-0.01; mu <- 14/(1000*12);
N <- 1000

#times
n_years <- 6;  n_t <- n_years*12; t	<- seq(0, n_t, by = 1); t0 = t[1]; t <- t[-1]; T <- length(t);

#initial conditions
i0 <- 1; s0 <-  N-i0; y0 = c( S=s0, I=i0);
data <-  list (T  = T, y0 = y0, t0 = t0, ts = t,lambda =lambda, gamma =gamma, mu =mu, N=N, y2_data=y2_data)

fit <- stan(file = '1sisInfer.stan', 
            data = data, 
            iter=500,
            chains=2,
            refresh=20,
            control=list(stepsize=0.001))
            

s <- rstan::extract(fit)
str(s$y)
y <- data.frame(s$y[1,1:T,1:2])
names(y) <- c('S','I')
head(y)

#recovered SI
plot(1, xlim=c(min(t), max(t)), ylim=c(min(y),max(y)), type='n', main='STAN Recovered' )
lines(t, y[,1], col=cols[1])
lines(t, y[,2], col=cols[2])
legend("topright", c("S", "I"), col = cols[1:2], lty = 1:2)

#recovered beta
pars=c('beta')
summary(fit, pars=pars)$summary
stan_trace(fit, pars=pars)
stan_dens(fit,pars=pars)

