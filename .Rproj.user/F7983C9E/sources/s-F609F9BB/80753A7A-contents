rm(list=ls())

library(outbreaks)
library(rstan)
library(dplyr)
rstan_options (auto_write = TRUE)
options (mc.cores = parallel::detectCores ())

head(influenza_england_1978_school)

#==============================================
# SIS - NegBin, cases
#==============================================

cases <- influenza_england_1978_school$in_bed  #Number of students in bed
recovered <- influenza_england_1978_school$convalescent  #Number of students in bed


#ODE parameters
N <- 763;

#times
T <- length(cases); t <- seq(0, T, by = 1); t0 = 0; t <- t[-1]; 

#initial conditions
i0 <- 1; s0 <-  N-i0; y0 = c( S=s0, I=i0);
data_sis <-  list (T  = T, y0 = y0, t0 = t0, ts = t, N=N, cases=cases)

#
niter <- 2000

fit_sis <- stan(file = 'sis.stan', 
                       data = data_sis, 
                       iter=niter,
                       chains=2,
                       refresh=20,
                       control=list(adapt_delta=0.99))

s <- rstan::extract(fit_sis)
str(s$y)

I_fit <- s$y[,, 2]
df_fit_SIR = data.frame(  I_median =apply(I_fit, 2, median), 
                          I_low=apply(I_fit, 2, quantile, probs=c(0.025)),
                          I_high=apply(I_fit, 2, quantile, probs=c(0.975)), 
                          t)

ggplot(df_fit_SIR, mapping=aes(x=t))+
  geom_point(mapping=aes(y=cases)) +
  geom_point(mapping=aes(y=recovered)) +
  geom_ribbon(aes(ymin = I_low, ymax = I_high), fill = "orange", alpha = 0.6) + 
  geom_line(data=df_fit_SIR, mapping=aes(x=t, y=I_median, color="Median")) 

#parameters
pars=c('beta', 'gamma', 'reciprocal_phi_cases',  'reciprocal_phi_recovered')
summary(fit_sir_negbin_recov, pars=pars, probs=c(0.025, 0.5, 0.0975))$summary
stan_trace(fit_sir_negbin_recov, pars=pars)
stan_dens(fit_sir_negbin_recov,pars=pars)

#==============================================
# SIR - NegBin, cases
#==============================================

# time series of cases
cases <- influenza_england_1978_school$in_bed  #Number of students in bed
recovered <- influenza_england_1978_school$convalescent  #Number of students in bed

# total count
N <- 763;

# times
T <- length(cases); t <- seq(0, T, by = 1); t0 = 0; t <- t[-1]; 

#initial conditions
i0 <- 1; s0 <-  N-i0; r0 <- 0; y0 = c( S=s0, I=i0, R=r0);

# data for Stan
data_sir <-  list (T  = T, y0 = y0, t0 = t0, ts = t, N=N, cases=cases)

# number of MCMC steps
niter <- 2000

model <- stan_model("sir_negbin.stan")

fit_sir_negbin <- sampling(model, 
                data = data_sir, 
                iter=niter,
                chains=2,
                refresh=20,
                control=list(adapt_delta=0.99))

s <- rstan::extract(fit_sir_negbin)
str(s$y)

I_est <- s$y[,, 2]
df_est = data.frame(  I_median=apply(I_est, 2, median), 
                      I_low=apply(I_est, 2, quantile, probs=c(0.025)),
                      I_high=apply(I_est, 2, quantile, probs=c(0.975)), 
                      t)

ggplot(df_est, mapping=aes(x=t))+
  geom_point(mapping=aes(y=cases)) +
  geom_ribbon(aes(ymin = I_low, ymax = I_high), fill = "orange", alpha = 0.6) + 
  geom_line(data=df_est, mapping=aes(x=t, y=I_median)) +
  labs(x = "Day", y="Number of students in bed") +
  labs(colour = "Median+95%CI")


# median_I_SIR = apply(fit_I_SIR, 2, median)
# low_I_SIR = apply(fit_I_SIR, 2, quantile, probs=c(0.025))
# high_I_SIR = apply(fit_I_SIR, 2, quantile, probs=c(0.975))
# df_fit_I_SIR = data.frame(median_I_SIR=apply(fit_I_SIR, 2, median), 
#                           low_I_SIR=apply(fit_I_SIR, 2, quantile, probs=c(0.025)),
#                           high_I_SIR=apply(fit_I_SIR, 2, quantile, probs=c(0.975)), 
#                           t)

R_est <- s$y[,, 3]
df_est = data.frame(  I_median=apply(I_est, 2, median), 
                          I_low=apply(I_est, 2, quantile, probs=c(0.025)),
                          I_high=apply(I_est, 2, quantile, probs=c(0.975)), 
                          R_median=apply(R_est, 2, median), 
                          R_low=apply(R_est, 2, quantile, probs=c(0.025)),
                          R_high=apply(R_est, 2, quantile, probs=c(0.975)), 
                          t)

ggplot(df_est, mapping=aes(x=t))+
  geom_point(mapping=aes(y=cases)) +
  geom_point(mapping=aes(y=recovered)) +
  geom_ribbon(aes(ymin = low_I_SIR, ymax = high_I_SIR), fill = "orange", alpha = 0.6) + 
  geom_line(data=df_fit_SIR, mapping=aes(x=t, y=median_I_SIR, color="Median")) +
  geom_ribbon(aes(ymin = low_R_SIR, ymax = high_R_SIR), fill = "darkgreen", alpha = 0.6) +
  geom_line(data=df_fit_SIR, mapping=aes(x=t, y=median_R_SIR, color="Median")) 
  

#parameters
pars=c('beta', 'gamma', 'phi_inv')
summary(fit_sir_negbin, pars=pars, probs=c(0.025, 0.5, 0.975))$summary
stan_trace(fit_sir_negbin, pars=pars)
stan_dens(fit_sir_negbin,pars=pars)


#==============================================
# SIR - NegBin, cases + recovered
#==============================================

cases <- influenza_england_1978_school$in_bed  #Number of students in bed
recovered <- influenza_england_1978_school$convalescent  #Number of students in bed

data_sir_recov <-  list (T  = T, y0 = y0, t0 = t0, ts = t, N=N, cases=cases, recovered=recovered)

fit_sir_negbin_recov <- stan(file = 'sir_negbin_recov.stan', 
                       data = data_sir_recov, 
                       iter=niter,
                       chains=2,
                       refresh=20,
                       control=list(adapt_delta=0.99))

s <- rstan::extract(fit_sir_negbin_recov)
str(s$y)

I_fit <- s$y[,, 2]
R_fit <- s$y[,, 3]
df_fit_SIR = data.frame(  I_median =apply(I_fit, 2, median), 
                          I_low=apply(I_fit, 2, quantile, probs=c(0.025)),
                          I_high=apply(I_fit, 2, quantile, probs=c(0.975)), 
                          R_median=apply(R_fit, 2, median), 
                          R_low=apply(R_fit, 2, quantile, probs=c(0.025)),
                          R_high=apply(R_fit, 2, quantile, probs=c(0.975)), 
                          t)

ggplot(df_fit_SIR, mapping=aes(x=t))+
  geom_point(mapping=aes(y=cases)) +
  geom_point(mapping=aes(y=recovered)) +
  geom_ribbon(aes(ymin = I_low, ymax = I_high), fill = "orange", alpha = 0.6) + 
  geom_line(data=df_fit_SIR, mapping=aes(x=t, y=I_median, color="Median")) +
  geom_ribbon(aes(ymin = R_low, ymax = R_high), fill = "darkgreen", alpha = 0.6) +
  geom_line(data=df_fit_SIR, mapping=aes(x=t, y=R_median, color="Median")) 

#parameters
pars=c('beta', 'gamma', 'reciprocal_phi_cases',  'reciprocal_phi_recovered')
summary(fit_sir_negbin_recov, pars=pars, probs=c(0.025, 0.5, 0.0975))$summary
stan_trace(fit_sir_negbin_recov, pars=pars)
stan_dens(fit_sir_negbin_recov,pars=pars)

